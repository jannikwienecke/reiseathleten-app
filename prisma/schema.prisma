datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
  Vacation Vacation[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model ActivityBooking {
  id         String   @id @default(cuid())
  date       DateTime
  activity   Activity @relation(fields: [activityId], references: [id])
  activityId String
}

model Tag {
  id          String        @id @default(cuid())
  name        String
  description String?
  color       String
  activityId  String?
  ActivityTag ActivityTag[]
}

model Location {
  id          String     @id @default(cuid())
  name        String
  description String
  image       String
  vacations   Vacation[]
}

model Activity {
  id               String             @id @default(cuid())
  name             String
  description      String?
  image            String?
  fixedDate        Boolean            @default(true)
  ActivityBooking  ActivityBooking[]
  ActivityTag      ActivityTag[]
  VacationActivity VacationActivity[]
}

model Vacation {
  id               String             @id @default(cuid())
  name             String
  description      String?
  startDate        DateTime
  endDate          DateTime
  location         Location           @relation(fields: [locationId], references: [id])
  locationId       String
  user             User               @relation(fields: [userId], references: [id])
  userId           String
  VacationActivity VacationActivity[]
}

model ActivityTag {
  id         String   @id @default(cuid())
  activity   Activity @relation(fields: [activityId], references: [id])
  activityId String
  tag        Tag      @relation(fields: [tagId], references: [id])
  tagId      String
}

model VacationActivity {
  id         String   @id @default(cuid())
  vacation   Vacation @relation(fields: [vacationId], references: [id])
  vacationId String
  activity   Activity @relation(fields: [activityId], references: [id])
  activityId String
}
